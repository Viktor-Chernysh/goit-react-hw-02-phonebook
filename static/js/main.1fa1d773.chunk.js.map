{"version":3,"sources":["components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js"],"names":["Form","state","name","number","handleSubmit","e","preventDefault","contactObject","id","uuidv4","props","AddNewContact","resetForm","handleChange","setState","target","value","nameInputId","numberInputId","onSubmit","this","htmlFor","type","pattern","title","onChange","required","Component","Filter","filter","inputId","Contacts","contacts","deleteContact","map","onClick","App","contact","el","toLowerCase","includes","alert","prevState","addFilter","trim","filteredContacts","toLocaleLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fa1d773.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const contactObject = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    // this.setState({});\n    this.props.AddNewContact(contactObject);\n    this.resetForm();\n  };\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>Name</label>\n        <input\n          id={this.nameInputId}\n          value={this.state.name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={this.handleChange}\n          required\n        />\n        <label htmlFor={this.numberInputId}>Number</label>\n        <input\n          id={this.numberInputId}\n          value={this.state.number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          onChange={this.handleChange}\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import { v4 as uuidv4 } from 'uuid';\nexport default function Filter({ filter }) {\n  const inputId = uuidv4();\n  return (\n    <>\n      <h3>Find contact by name</h3>\n      <input type=\"text\" id={inputId} name=\"filter\" onChange={filter} />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n\nexport default function Contacts({ contacts, deleteContact }) {\n  return (\n    <ol>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}:<span>{number}</span>{' '}\n          <button\n            type=\"button\"\n            onClick={() => {\n              deleteContact(id);\n            }}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ol>\n  );\n}\nContacts.propTypes = {\n  contacts: PropTypes.array,\n};\n","import { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Filter from './components/Filter/Filter';\nimport Contacts from './components/Contacts/Contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  AddNewContact = contact => {\n    const addedName = this.state.contacts\n      .map(el => el.name.toLowerCase())\n      .includes(contact.name.toLowerCase());\n\n    if (addedName) {\n      alert(`${contact.name} is already in contacts!`);\n      return;\n    }\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  addFilter = e => {\n    this.setState({ filter: e.target.value.trim() });\n  };\n  filteredContacts = () => {\n    return this.state.contacts.filter(el =>\n      el.name.toLocaleLowerCase().includes(this.state.filter),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(el => el.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <Form AddNewContact={this.AddNewContact} />\n        <h2>Contacts</h2>\n        <Filter filter={this.addFilter} />\n        {/* <Contacts contacts={this.state.contacts} /> */}\n        {this.state.filter === '' ? (\n          <Contacts\n            contacts={this.state.contacts}\n            deleteContact={this.deleteContact}\n          />\n        ) : (\n          <Contacts contacts={this.filteredContacts()} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}